# -*- coding: utf-8 -*-
"""Tarea Neutral Farm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oFGxsA_USzp0xK3nbMjRviv4V_ECxkw3
"""

# montar google drive para guardar y acceder a los archivos del proyecto
from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# Entrar a la carpeta del proyecto en Google Drive y mostrar todos los archivos que contiene
# %cd "/content/drive/MyDrive/Pedro Yanez - neutral-farming-om"
!ls -R

# instalar las dependencias necesarias del proyecto desde requirements.txt
!pip install -r requirements.txt

# ejecutar el script de entrenamiento para crear el modelo y guardar m√©tricas en model/artifacts
!python src/train_model.py

# abrir y mostrar las m√©tricas de validaci√≥n guardadas en model/artifacts/metrics.json
import json

with open("model/artifacts/metrics.json", "r") as f:
    metrics = json.load(f)

metrics

# instalar pyngrok para exponer la API de FastAPI al exterior con un link p√∫blico
!pip install pyngrok



# instalar cloudflared oficial
!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb && dpkg -i cloudflared-linux-amd64.deb
!uvicorn src.api:app --host 0.0.0.0 --port 8000 & cloudflared tunnel --url http://localhost:8000

# exponer la API en un link p√∫blico sin password
!uvicorn src.api:app --host 0.0.0.0 --port 8000 & cloudflared tunnel --url http://localhost:8000

#Ir a post predict try out y e indicar
# Link de ejemplo: https://pmc-tracks-aged-locations.trycloudflare.com/docs

{
  "pH": 6.7,
  "EC": 0.25,
  "Total_Nitrogen": 0.12,
  "Moisture": 28
}

# endpoint /predict para construir un DataFrame con los nombres EXACTOS de entrenamiento
from pathlib import Path

api_code = """
from __future__ import annotations
from fastapi import FastAPI, Depends, HTTPException
from sqlalchemy.orm import Session
from .db import Base, engine, SessionLocal
from .models import SoilRecord
from .schema import IngestPayload, PredictPayload, PredictResponse
from .utils import get_model

Base.metadata.create_all(bind=engine)
app = FastAPI(title="Neutral Farming OM API", version="0.1.0")

def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

@app.post('/data_ingestion')
def data_ingestion(payload: IngestPayload, db: Session = Depends(get_db)):
    record = SoilRecord(
        pH=payload.pH,
        EC=payload.EC,
        total_nitrogen=payload.Total_Nitrogen,
        moisture=payload.Moisture,
        organic_matter=payload.Organic_Matter,
    )
    db.add(record)
    db.commit()
    db.refresh(record)
    return {'id': record.id}

@app.post('/predict', response_model=PredictResponse)
def predict(payload: PredictPayload):
    import pandas as pd
    model = get_model()
    # construir DataFrame con los mismos nombres de columnas usados al entrenar
    X = pd.DataFrame([{
        'pH': payload.pH,
        'EC': payload.EC,
        'Total Nitrogen': payload.Total_Nitrogen,  # OJO: espacio como en el CSV
        'Moisture': payload.Moisture
    }])
    try:
        pred = float(model.predict(X)[0])
    except Exception as e:
        raise HTTPException(status_code=400, detail=f'Prediction failed: {e}')
    return PredictResponse(predicted_organic_matter=round(pred, 4))
"""
Path("src/api.py").write_text(api_code)
print("api.py actualizado üéØ")

# Prueba de data ingestion
# Ir al link de ejemplo https://pmc-tracks-aged-locations.trycloudflare.com/docs
# Ir a POST /data_ingestion, try out, y usar el siguiente json de ejemplo

{
  "pH": 6.9,
  "EC": 0.28,
  "Total_Nitrogen": 0.14,
  "Moisture": 29,
  "Organic_Matter": 4.1
}

# Commented out IPython magic to ensure Python compatibility.
# Configurar identidad de GitHub
!git config --global user.email "pedroeyanezmel531@gmail.com"
!git config --global user.name "p1y1m"

# Entrar a la carpeta del proyecto en Google Drive
# %cd /content/drive/MyDrive/neutral-farming-om

# Inicializar git en la carpeta del proyecto
!git init

# Conectar el repositorio remoto de GitHub
!git remote add origin https://github.com/p1y1m/Codes.git

# Agregar todos los archivos del proyecto al versionamiento
!git add .

# Hacer el primer commit con un mensaje descriptivo
!git commit -m "Initial commit - Neutral Farming project"

# Cambiar el nombre de la rama a main
!git branch -M main

# Subir el proyecto a GitHub en la rama main
!git push -u origin main